{"version":3,"sources":["webpack:///./src/app/app.component.html","webpack:///./src/app/comments/comments.component.html","webpack:///./src/app/findjob/findjob.component.html","webpack:///./src/app/home/home.component.html","webpack:///./src/app/job/job.component.html","webpack:///./src/app/login/login.component.html","webpack:///./src/app/postjob/postjob.component.html","webpack:///./src/app/profile/profile.component.html","webpack:///./src/app/register/register.component.html","webpack:///./src/app/transaction/transaction.component.html","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth-guard.service.ts","webpack:///./src/app/authentication.service.ts","webpack:///./src/app/blockexplorer.service.ts","webpack:///./src/app/comment.service.ts","webpack:///./src/app/comments/comments.component.css","webpack:///./src/app/comments/comments.component.ts","webpack:///./src/app/findjob/findjob.component.css","webpack:///./src/app/findjob/findjob.component.ts","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/job.service.ts","webpack:///./src/app/job/job.component.css","webpack:///./src/app/job/job.component.ts","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/models/comment.ts","webpack:///./src/app/models/job.ts","webpack:///./src/app/postjob/postjob.component.css","webpack:///./src/app/postjob/postjob.component.ts","webpack:///./src/app/profile/profile.component.css","webpack:///./src/app/profile/profile.component.ts","webpack:///./src/app/register/register.component.css","webpack:///./src/app/register/register.component.ts","webpack:///./src/app/transaction/transaction.component.css","webpack:///./src/app/transaction/transaction.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["module.exports = \"<div id=\\\"root\\\">\\n\\t<div class=\\\"navbar navbar-inverse\\\">\\n\\t\\t<div class=\\\"container\\\">\\n\\t\\t\\t<div id=\\\"navbar-main\\\">\\n\\n\\t\\t\\t\\t<ul class=\\\"nav navbar-nav\\\">\\n\\t\\t\\t\\t\\t<li><a routerLink=\\\"/find\\\">Find</a></li>\\n\\t\\t\\t\\t\\t<li><a routerLink=\\\"/post\\\">Post</a></li>\\n\\t\\t\\t\\t</ul>\\n\\n\\t\\t\\t\\t<ul class=\\\"nav navbar-nav navbar-right\\\">\\n\\t\\t\\t\\t\\t<li *ngIf=\\\"!auth.isLoggedIn()\\\"><a routerLink=\\\"/register\\\">Register</a></li>\\n\\t\\t\\t\\t\\t<li *ngIf=\\\"!auth.isLoggedIn()\\\"><a routerLink=\\\"/login\\\">Log In</a></li>\\n\\t\\t\\t\\t\\t<li *ngIf=\\\"auth.isLoggedIn()\\\"><a routerLink=\\\"/profile\\\">My Profile</a></li>\\n\\t\\t\\t\\t\\t<li *ngIf=\\\"auth.isLoggedIn()\\\"><a routerLink=\\\"/\\\" (click)=\\\"auth.logout()\\\">Logout</a></li>\\n\\t\\t\\t\\t</ul>\\n\\t\\t\\t\\t\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\n</div>\\n\\n<router-outlet></router-outlet>\\n\"","module.exports = \"<div class=\\\"container\\\">\\r\\n\\t<div class=\\\"row\\\">\\r\\n\\t  <div class=\\\"col-md-1\\\"></div>\\r\\n\\t  <div class=\\\"col-md-10\\\">\\r\\n\\t  \\t<div id=\\\"comments-frame\\\">\\r\\n \\r\\n \\t\\t\\t<!--new comment-->\\r\\n\\t\\t  \\t<form [formGroup]=\\\"form\\\" class=\\\"comment-form\\\" (submit)=\\\"onSubmit()\\\">\\r\\n\\t\\t        <label for=\\\"\\\">New Comment</label>\\r\\n\\t\\t        <div *ngIf=\\\"!isLoggedIn\\\" class=\\\"message-login\\\" >\\r\\n\\t    \\t\\t\\t<p>To post a comment, you must <a routerLink=\\\"/login\\\">log in</a> or <a routerLink=\\\"/register\\\">register</a>.</p>\\r\\n\\t  \\t\\t\\t</div>\\r\\n\\t  \\t\\t\\t<div *ngIf=\\\"isLoggedIn\\\">\\r\\n\\t  \\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t        \\t<textarea type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"content\\\" placeholder=\\\"Enter Your Comment\\\" formControlName=\\\"content\\\"></textarea>\\r\\n\\t\\t\\t    \\t</div>\\r\\n\\r\\n\\t\\t\\t    \\t<div class=\\\"input-group\\\">\\r\\n\\t\\t\\t\\t\\t<input type=\\\"file\\\" id=\\\"image\\\" (change)=\\\"onFileChange($event)\\\" #fileInput>\\r\\n\\t\\t\\t        <span class=\\\"input-group-btn\\\">\\r\\n\\t\\t\\t        \\t<button id=\\\"comment-post\\\" type=\\\"submit\\\" class=\\\"btn btn-default btn-comment\\\">Post Comment</button>\\r\\n\\t    \\t\\t\\t</span>\\r\\n\\t    \\t\\t</div>\\r\\n\\r\\n\\t\\t    \\t</div>\\r\\n\\t      \\t</form>\\r\\n\\r\\n\\t\\t\\t<!--existing comments-->\\r\\n\\t\\t    <div class=\\\"comments\\\">\\r\\n\\t\\t    \\t<!-- <p> {{this.api_data_job.confirmed_balance}}</p> -->\\r\\n\\t\\t\\t    <ul class=\\\"comment-list\\\">\\r\\n\\t\\t\\t\\t\\t<li class=\\\"comment-item\\\" *ngFor=\\\"let comment of commentList\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<img\\r\\n\\t\\t\\t\\t\\t\\t*ngIf=\\\"comment.image && comment.image.length > 0\\\"\\r\\n\\t\\t\\t\\t\\t\\t[src]=\\\"showImage(comment)\\\"\\r\\n\\t\\t\\t\\t\\t    alt=\\\"(submission image)\\\">\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t<div [innerHtml]=\\\"comment.content\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t<br>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"comment-bar\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<table>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<td class=\\\"tleft\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t- {{comment.author}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- <td class=\\\"tright\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"pay\\\" type=\\\"submit\\\" class=\\\"btn btn-default\\\" (click)=\\\"pay()\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t*ngIf=\\\"isJobAuthor\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tmwlConfirmationPopover\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[popoverTitle]=\\\"popoverTitle\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tplacement=\\\"left\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t(confirm)=\\\"paySubmission(comment)\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t(cancel)=\\\"cancelClicked = true\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[popoverMessage]=\\\"popoverMessage\\\">Pay</button>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"reply\\\"> Reply </span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</td> -->\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<tr> This comment earned {{comment.earned}}</tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t</table>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t<div id=\\\"payMe\\\" *ngIf=\\\"isJobAuthor\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<button type=\\\"submit\\\" class=\\\"btn btn-default\\\" (click)=\\\"pay(comment)\\\" [disabled]=\\\"confirmed\\\">Pay Me</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<app-transaction *ngIf=\\\"payOpenFor == comment._id\\\" [source_job]=\\\"jobId\\\" [destination_comment]=\\\"comment\\\" [api_data_job]=\\\"api_data_job\\\"></app-transaction>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t    </ul>\\r\\n\\t\\t    </div>\\r\\n\\t\\t  </div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n  <div class=\\\"col-md-1\\\"></div>\\r\\n</div>\"","module.exports = \"<div class=\\\"container\\\">\\r\\n\\t<div class=\\\"row\\\">\\r\\n\\t\\t<div class=\\\"col-md-1\\\"></div>\\r\\n\\t\\t<div class=\\\"col-md-10\\\">\\r\\n\\t\\t\\r\\n\\t\\t\\t<div class=\\\"pages\\\">\\r\\n\\t\\t\\t\\tPage: {{pageNumber}}\\r\\n\\t\\t\\t\\t<span class=\\\"page-number\\\" *ngFor=\\\"let page of countPages()\\\" (click)=\\\"changePage(page)\\\">\\r\\n\\t\\t\\t\\t\\t{{page}}\\r\\n\\t\\t\\t\\t</span>\\r\\n\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t<div class=\\\"jobs\\\">\\r\\n\\t\\t\\t\\t<ul class=\\\"job-list\\\">\\r\\n\\t\\t\\t\\t\\t<li class=\\\"job-item\\\" *ngFor=\\\"let job of jobList\\\">\\r\\n\\t\\t\\t\\t\\t\\t<a class=\\\"job-title\\\" (click)=\\\"goToJob(job._id)\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t{{job.title}}\\r\\n\\t\\t\\t\\t\\t\\t</a>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"job-date\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t{{job.date_created}}\\r\\n\\t\\t\\t\\t\\t\\t</span>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<p class=\\\"job-description\\\" [innerHtml]=\\\"job.description\\\">\\r\\n\\t\\t\\t\\t\\t\\t</p>\\r\\n\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t</ul>\\r\\n\\t\\t\\t</div>\\r\\n\\r\\n\\t    </div>\\r\\n\\t</div>\\r\\n  <div class=\\\"col-md-1\\\"></div>\\r\\n</div>\"","module.exports = \"<!-- <div class=\\\"container\\\">\\n\\t<div class=\\\"row\\\">\\n\\t<div class=\\\"col-md-2\\\"></div>\\n\\t<div class=\\\"col-md-8\\\">\\n  \\t\\t<h1>this is the home page</h1>\\n  \\t</div>\\n  \\t<div class=\\\"col-md-2\\\"></div>\\n</div> -->\"","module.exports = \"<div class=\\\"container\\\">\\r\\n\\t<div class=\\\"row\\\">\\r\\n\\t\\t<div class=\\\"col-md-1\\\"></div>\\r\\n\\t\\t<div class=\\\"col-md-10\\\">\\t      \\r\\n\\t\\t\\t<div class=\\\"listing\\\">\\r\\n\\r\\n\\t\\t\\t\\t<div class=\\\"job-title\\\">\\r\\n\\t\\t\\t\\t\\t<p> {{job?.title}} </p>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\\"job-description\\\" [innerHtml]=\\\"job?.description\\\"></div>\\r\\n\\r\\n\\t\\t\\t\\t<hr>\\r\\n\\r\\n\\t\\t\\t\\t<p> <b>Date created:</b> {{job?.date_created}} </p>\\r\\n\\t\\t\\t\\t<p> <b>Created by:</b> {{job?.author}} </p>\\r\\n\\t\\t\\t\\t<p> <b>Address:</b>\\r\\n\\t\\t\\t\\t\\t<a href=\\\"https://chain.so/address/BTCTEST/{{job?.address}}\\\">{{ job?.address }}</a>\\r\\n\\t\\t\\t\\t<p>\\r\\n\\t\\t\\t\\t\\t<b>Balance:</b>\\r\\n\\t\\t\\t\\t\\t<span *ngIf=\\\"api_data_job\\\">{{ api_data_job.confirmed_balance*1 }} tBTC</span>\\r\\n\\t\\t\\t\\t</p>\\r\\n\\r\\n\\t\\t\\t\\t<p>\\r\\n\\t\\t\\t\\t\\t<b>Unconfirmed Balance: </b>\\r\\n\\t\\t\\t\\t\\t<span *ngIf=\\\"api_data_job\\\">{{ api_data_job.confirmed_balance*1 + api_data_job.unconfirmed_balance*1 }} tBTC</span>\\r\\n\\t\\t\\t\\t</p>\\r\\n\\r\\n\\t\\t\\t\\t<div id=\\\"jobAdmin\\\" *ngIf=\\\"isJobAuthor\\\">\\r\\n\\t\\t\\t\\t\\t<p>this is your job</p>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t<div id=\\\"fundMe\\\">\\r\\n\\t\\t\\t\\t\\t<button type=\\\"submit\\\" class=\\\"btn btn-default\\\" (click)=\\\"fundMe()\\\" [disabled]=\\\"confirmed\\\">Fund Me</button>\\r\\n\\t\\t\\t\\t\\t<app-transaction *ngIf =\\\"isFundingOpen\\\" [destination_address]=\\\"job.address\\\"></app-transaction>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t</div>\\r\\n\\r\\n\\r\\n\\r\\n\\t\\t</div>\\r\\n\\t<div class=\\\"col-md-1\\\"></div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"comments\\\">\\r\\n\\t<app-comments [api_data_job]=\\\"api_data_job\\\"></app-comments>\\r\\n</div>\"","module.exports = \"<div class=\\\"container\\\">\\n\\t<div class=\\\"row\\\">\\n\\t\\t<div class=\\\"col-md-2\\\"></div>\\n\\t\\t<div class=\\\"col-md-8\\\">\\n\\n\\t\\t\\t<h1 class=\\\"form-signin-heading\\\">Sign in</h1>\\n\\t\\t\\t<p class=\\\"lead\\\">Not a member? <a routerLink=\\\"/register\\\">Register</a> an account.</p>\\n\\t\\n\\t\\t\\t<form (submit)=\\\"login()\\\">\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t<label for=\\\"name\\\">Username</label>\\n\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"name\\\" placeholder=\\\"Enter your username\\\" [(ngModel)]=\\\"credentials.name\\\">\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t<label for=\\\"password\\\">Password</label>\\n\\t\\t\\t\\t\\t<input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"password\\\" placeholder=\\\"Enter your password\\\" [(ngModel)]=\\\"credentials.password\\\">\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t<button type=\\\"submit\\\" class=\\\"btn btn-default\\\">Sign in!</button>\\n\\t\\t\\t</form>\\n\\n\\t\\t</div>\\n\\t\\t<div class=\\\"col-md-2\\\"></div>\\n\\t</div>\\n</div>\\n\"","module.exports = \"<div class=\\\"container\\\">\\n\\t<div class=\\\"row\\\">\\n\\t\\t<div class=\\\"col-md-2\\\"></div>\\n\\t\\t<div class=\\\"col-md-8\\\">\\n\\n\\t\\t\\t<div class=\\\"message-login\\\" *ngIf=\\\"!isLoggedIn\\\">\\n\\t\\t\\t\\t<p>To make a submission, you must <a routerLink=\\\"/login\\\">log in</a> or <a routerLink=\\\"/register\\\">register</a>.</p>\\n\\t\\t\\t</div>\\n\\n\\t\\t\\t<div class=\\\"form-newjob\\\" *ngIf=\\\"isLoggedIn\\\">\\n\\t\\t\\t\\t<h1 class=\\\"form-newjob-heading\\\">New Submission</h1>\\n\\n\\t\\t\\t\\t<form [formGroup]=\\\"form\\\" (submit)=\\\"onSubmit()\\\">\\n\\n\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t\\t<label for=\\\"Title\\\">Title</label>\\n\\t\\t\\t\\t\\t\\t<input class=\\\"form-control\\\" name=\\\"title\\\" placeholder=\\\"Title of the job\\\" formControlName=\\\"title\\\">\\n\\t\\t\\t\\t\\t\\t<p class=\\\"form-invalid\\\" *ngIf=\\\"form.controls.title.errors?.required && (form.controls.title.dirty || form.controls.title.touched)\\\">Submission title is required.</p>\\n\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t\\t<label for=\\\"description\\\">Description</label>\\n\\t\\t\\t\\t\\t\\t<textarea class=\\\"form-control\\\" name=\\\"description\\\" placeholder=\\\"Description of the job\\\" formControlName=\\\"description\\\"></textarea>\\n\\t\\t\\t\\t\\t\\t<p class=\\\"form-invalid\\\" *ngIf=\\\"form.controls.description.errors?.required && (form.controls.description.dirty || form.controls.description.touched)\\\">Submission description is required.</p>\\n\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t<button type=\\\"submit\\\" class=\\\"btn btn-default\\\" [disabled]=\\\"!form.valid\\\">Create Job</button>\\n\\t\\t\\t\\t</form>\\n\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"col-md-2\\\"></div>\\n\\t\\t</div>\\n\\n\\t</div>\\n</div>\\n\"","module.exports = \"<div class=\\\"container\\\">\\r\\n\\t<div class=\\\"row\\\">\\r\\n\\t\\t<div class=\\\"col-md-2\\\"></div>\\r\\n\\t\\t <div class=\\\"col-md-8\\\">\\r\\n\\r\\n\\t\\t\\t<h1 class=\\\"form-signin-heading\\\">My Profile</h1>\\r\\n\\r\\n\\t\\t\\t<div>\\r\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t<label class=\\\"col-sm-3 control-label\\\">Username:</label>\\r\\n\\t\\t\\t\\t\\t<span class=\\\"form-control-static\\\">{{ profile?.name }}</span>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t<label class=\\\"col-sm-3 control-label\\\">Public Address:</label>\\r\\n\\t\\t\\t\\t\\t<a href=\\\"https://chain.so/address/BTCTEST/{{ profile?.address }}\\\">{{ profile?.address }}</a>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t<label class=\\\"col-sm-3 control-label\\\">WIF:</label>\\r\\n\\t\\t\\t\\t\\t<span class=\\\"form-control-static\\\">{{ profile?.WIF }}</span>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t<label class=\\\"col-sm-3 control-label\\\">Balance: </label>\\r\\n\\t\\t\\t\\t\\t<span class=\\\"form-control-static\\\">{{ api_data.confirmed_balance*1 }} tBTC</span>\\r\\n\\t\\t\\t\\t\\t<!-- <span class=\\\"form-control-static-red\\\" *ngIf=\\\"!api_data.balance\\\">Error: Could not connect to Blockexplorer.</span> -->\\r\\n\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t<label class=\\\"col-sm-3 control-label\\\">Unconfirmed Balance: </label>\\r\\n\\t\\t\\t\\t\\t<span class=\\\"form-control-static\\\">{{ api_data.confirmed_balance*1 + api_data.unconfirmed_balance*1 }} tBTC</span>\\r\\n\\t\\t\\t\\t\\t<!-- <span class=\\\"form-control-static-red\\\" *ngIf=\\\"!api_data.balance\\\">Error: Could not connect to Blockexplorer.</span> -->\\r\\n\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t<div id=\\\"withdrawal\\\">\\r\\n\\t\\t\\t\\t\\t<button type=\\\"submit\\\" class=\\\"btn btn-default\\\" (click)=\\\"withdrawal()\\\" [disabled]=\\\"confirmed\\\">Withdraw</button>\\r\\n\\t\\t\\t\\t\\t<app-transaction *ngIf =\\\"isWithdrawing\\\"></app-transaction>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"col-md-2\\\"></div>\\r\\n\\t</div>\\r\\n</div>\"","module.exports = \"<div class=\\\"container\\\">\\n\\t<div class=\\\"row\\\">\\n\\t\\t<div class=\\\"col-md-2\\\"></div>\\n\\t\\t<div class=\\\"col-md-8\\\">\\n\\n\\t\\t\\t<h1>Register</h1>\\n\\t\\t\\t<p class=\\\"lead\\\">Already a member? <a routerLink=\\\"/login\\\">Log in</a> instead.</p>\\n\\n\\t\\t\\t<form [formGroup]=\\\"form\\\" (submit)=\\\"onSubmit()\\\">\\n\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t<label for=\\\"name\\\">Username</label>\\n\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"name\\\" placeholder=\\\"Enter your username\\\" formControlName=\\\"name\\\">\\n\\t\\t\\t\\t\\t<p class=\\\"form-invalid\\\" *ngIf=\\\"form.controls.name.errors?.required && (form.controls.name.dirty || form.controls.name.touched)\\\">Username is required.</p>\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t<label for=\\\"password\\\">Password</label>\\n\\t\\t\\t\\t\\t<input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"password\\\" placeholder=\\\"Enter your password\\\"  formControlName=\\\"password\\\">\\n\\t\\t\\t\\t\\t<p class=\\\"form-invalid\\\" *ngIf=\\\"form.controls.password.errors?.required && (form.controls.password.dirty || form.controls.password.touched)\\\">Password is required</p>\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t<button type=\\\"submit\\\" class=\\\"btn btn-default\\\" [disabled]=\\\"!form.valid\\\">Register!</button>\\n\\t\\t\\t</form>\\n\\t\\t</div>\\n\\n\\t\\t<div class=\\\"col-md-2\\\"></div>\\n\\t</div>\\n\\n</div>\"","module.exports = \"<div id=\\\"transaction\\\">\\r\\n\\t<!-- make sure we got the data -->\\r\\n\\t<div>\\r\\n\\t\\t<p *ngIf=\\\"!isLoggedIn\\\" class=\\\"message-login\\\">To make a contribution, you must <a routerLink=\\\"/login\\\">log in</a> or <a routerLink=\\\"/register\\\">register</a>.</p>\\r\\n\\r\\n\\t\\t<p *ngIf=\\\"isLoggedIn && api_data && api_data.confirmed_balance == 0\\\" class=\\\"red-text\\\">Your account balance is zero. Visit your <a routerLink=\\\"/profile\\\">profile</a> to add funds.</p>\\r\\n\\t\\t<p *ngIf=\\\"!api_data\\\" class=\\\"red-text\\\">Error: User account data could not be loaded. Try again later.</p>\\r\\n\\t\\t\\r\\n\\r\\n\\t\\t\\r\\n\\t</div>\\r\\n\\r\\n\\t<div *ngIf=\\\"isLoggedIn && api_data.confirmed_balance\\\">\\r\\n\\r\\n\\t\\t<form [formGroup]=\\\"form\\\" (submit)=\\\"onSubmit()\\\">\\r\\n\\r\\n\\t\\t\\t<p class=\\\"form-group\\\" *ngIf=\\\"api_data.confirmed_balance\\\">\\r\\n\\t\\t\\t\\t<b>Your <span *ngIf=\\\"fromJob\\\">job</span> account balance: </b> {{ api_data.confirmed_balance*1 }} tBTC\\r\\n\\t\\t\\t</p>\\r\\n\\r\\n\\t\\t\\t<p class=\\\"form-group\\\" *ngIf=\\\"api_data.unconfirmed_balance\\\">\\r\\n\\t\\t\\t\\t<b>Your unconfirmed <span *ngIf=\\\"fromJob\\\">job</span> account balance: </b>\\r\\n\\t\\t\\t{{api_data.confirmed_balance*1 + api_data.unconfirmed_balance*1}} tBTC</p>\\r\\n\\r\\n\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t<label for=\\\"tx_value\\\">Amount to send (in tBTC):</label>\\r\\n\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"tx_value\\\" placeholder=\\\"1\\\"  formControlName=\\\"tx_value\\\">\\r\\n\\t\\t\\t\\t<p class=\\\"red-text\\\" *ngIf=\\\"form.controls.tx_value.errors?.required && (form.controls.tx_value.dirty || form.controls.tx_value.touched)\\\">Amount is required</p>\\r\\n\\t\\t\\t\\t<p class=\\\"red-text\\\" *ngIf=\\\"api_data.confirmed_balance < (form.controls.tx_value.value + form.controls.tx_fee.value)\\\">Total amount cannot be greater than your account balance.</p>\\r\\n\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t<label for=\\\"tx_fee\\\">Transaction fees:</label>\\r\\n\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"tx_fee\\\" placeholder=\\\".0001\\\"  formControlName=\\\"tx_fee\\\">\\r\\n\\t\\t\\t\\t<p class=\\\"red-text\\\" *ngIf=\\\".01 <= form.controls.tx_fee.value\\\">Fees must be <= .01</p>\\r\\n\\t\\t\\t\\t<p class=\\\"red-text\\\" *ngIf=\\\".0001 >= form.controls.tx_fee.value\\\">Fees must be >= .0001</p>\\r\\n\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t<div *ngIf=\\\"!hasDestination\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t<label for=\\\"tx_destination\\\">Destination Address:</label>\\r\\n\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"tx_destination\\\" formControlName=\\\"tx_destination\\\">\\r\\n\\t\\t\\t\\t\\t<p class=\\\"red-text\\\" *ngIf=\\\"form.controls.tx_destination.errors?.required && (form.controls.tx_destination.dirty || form.controls.tx_destination.touched)\\\">Destination is required</p>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t<div *ngIf=\\\"hasDestination && !fromJob\\\">\\r\\n\\t\\t\\t\\t<p> <b>Destination Address:</b> {{destination_address}} </p>\\r\\n\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t<div *ngIf=\\\"fromJob\\\">\\r\\n\\t\\t\\t\\t<p> <b>Destination User:</b> {{destination_comment.author}} </p>\\r\\n\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t<div>\\r\\n\\t\\t\\t\\t<p> <b>Total Amount:</b> {{(form.controls.tx_fee.value*1) + (form.controls.tx_value.value*1)}} </p>\\r\\n\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t<button type=\\\"submit\\\" class=\\\"btn btn-default\\\" [disabled]=\\\"!form.valid\\\">Send Transaction</button>\\r\\n\\r\\n\\t\\t\\t<div class=\\\"confirmation\\\">\\r\\n\\t\\t\\t\\t<p class=\\\"red-text\\\" *ngIf=\\\"confirmed && txid == 0\\\">Your transaction could not be sent.</p>\\r\\n\\t\\t\\t\\t<p class=\\\"form-success\\\" *ngIf=\\\"confirmed && txid != 0\\\">Success! txid: <a href=\\\"https://chain.so/tx/BTCTEST/{{ txid }}\\\"> {{txid}} </a></p>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</form>\\r\\n\\t</div>\\r\\n</div>\"","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"#root {\\n\\tbackground: #2c2c2f;\\n}\\n\\n#navbar-main {\\n\\tfont-size: 1em;\\n\\tfont-weight:bold;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Q0FDQyxtQkFBbUI7QUFDcEI7O0FBRUE7Q0FDQyxjQUFjO0NBQ2QsZ0JBQWdCO0FBQ2pCIiwiZmlsZSI6InNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIjcm9vdCB7XG5cdGJhY2tncm91bmQ6ICMyYzJjMmY7XG59XG5cbiNuYXZiYXItbWFpbiB7XG5cdGZvbnQtc2l6ZTogMWVtO1xuXHRmb250LXdlaWdodDpib2xkO1xufSJdfQ== */\"","import { Component } from '@angular/core';\nimport { AuthenticationService } from './authentication.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  constructor(public auth: AuthenticationService) {}\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { AppComponent } from './app.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { HomeComponent } from './home/home.component';\nimport { PostJobComponent } from './postjob/postjob.component';\nimport { FindJobComponent } from './findjob/findjob.component'\n\nimport { AuthenticationService } from './authentication.service';\nimport { AuthGuardService } from './auth-guard.service';\nimport { JobService } from './job.service';\nimport { JobComponent } from './job/job.component';\nimport { CommentsComponent } from './comments/comments.component';\nimport { CommentService } from './comment.service';\nimport { BlockExplorerService } from './blockexplorer.service';\nimport { ConfirmationPopoverModule } from 'angular-confirmation-popover';\nimport { TransactionComponent } from './transaction/transaction.component';\n\nconst routes: Routes = [\n  { path: '', component: FindJobComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'register', component: RegisterComponent },\n  { path: 'profile', component: ProfileComponent, canActivate: [AuthGuardService] },\n  { path: 'post', component: PostJobComponent },\n  { path: 'find', component: FindJobComponent },\n  { path: 'job/:id', component: JobComponent }\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ProfileComponent,\n    LoginComponent,\n    RegisterComponent,\n    HomeComponent,\n    PostJobComponent,\n    FindJobComponent,\n    JobComponent,\n    CommentsComponent,\n    TransactionComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    RouterModule.forRoot(routes),\n    ReactiveFormsModule,\n    ConfirmationPopoverModule.forRoot({confirmButtonType:'danger'}) \n  ],\n  providers: [\n    AuthenticationService, \n    AuthGuardService,\n    JobService,\n    CommentService,\n    BlockExplorerService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { Router, CanActivate } from '@angular/router';\nimport { AuthenticationService } from './authentication.service';\n\n@Injectable()\nexport class AuthGuardService implements CanActivate {\n\n  constructor(private auth: AuthenticationService, private router: Router) {}\n\n  canActivate() {\n\tif (!this.auth.isLoggedIn()) {\n\t  this.router.navigateByUrl('/');\n\t  return false;\n\t}\n\treturn true;\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { map } from 'rxjs/operators/map';\r\nimport { Router } from '@angular/router';\r\n// import { RequestOptions, Request, RequestMethod } from '@angular/http-client';\r\nimport { environment } from '../environments/environment';\r\n\r\n// decoded token\r\nexport interface UserDetails {\r\n\t_id: string;\r\n\tname: string;\r\n\texp: number;\r\n\tiat: number;\r\n}\r\n\r\ninterface TokenResponse {\r\n\ttoken: string;\r\n}\r\n\r\nexport interface TokenPayload {\r\n\tname: string;\r\n\tpassword: string;\r\n}\r\n\r\nvar apiUrl = environment.api_url + '/api';\r\n\r\n@Injectable()\r\nexport class AuthenticationService {\r\n\tprivate token: string;\r\n\r\n\tconstructor(private http: HttpClient, private router: Router) {}\r\n\r\n\tprivate saveToken(token: string): void {\r\n\t\tlocalStorage.setItem('mean-token', token);\r\n\t\tthis.token = token;\r\n\t}\r\n\r\n\tprivate getToken(): string {\r\n\t\tif (!this.token) {\r\n\t\t\tthis.token = localStorage.getItem('mean-token');\r\n\t\t}\r\n\t\treturn this.token;\r\n\t}\r\n\r\n\tpublic getUserDetails(): UserDetails {\r\n\t\tconst token = this.getToken();\r\n\t\t// console.log(\"getuserdetails: \" + token);\r\n\t\tlet payload;\r\n\t\tif (token) {\r\n\t\t\tpayload = token.split('.')[1];\r\n\t\t\tpayload = window.atob(payload);\r\n\t\t\treturn JSON.parse(payload);\r\n\t\t} else {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic isLoggedIn(): boolean {\r\n\t\tconst user = this.getUserDetails();\r\n\t\t// console.log(\"isloggedin: \" + user);\r\n\t\tif (user) {\r\n\t\t\treturn user.exp > Date.now() / 1000;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate request(method: 'post'|'get', type: 'login'|'register'|'profile'|'maketx', user?: TokenPayload): Observable<any> {\r\n\t\tlet base;\r\n\t\tif (method === 'post') {\r\n\t\t\tbase = this.http.post(`${apiUrl}/${type}`, user);\r\n\t\t} else {\r\n\t\t\tbase = this.http.get(`${apiUrl}/${type}`, { headers: { Authorization: `Bearer ${this.getToken()}` }});      \r\n\t\t}\r\n\t\t\r\n\t\tconst request = base.pipe(\r\n\t\t\tmap((data: TokenResponse) => {\r\n\t\t\t\tif (data.token) {\r\n\t\t\t\t\tthis.saveToken(data.token);\r\n\t\t\t\t}\r\n\t\t\t\treturn data;\r\n\t\t\t})\r\n\t\t);\r\n\t\treturn request;\r\n\t}\r\n\r\n\tpublic register(user: TokenPayload): Observable<any> {\r\n\t\treturn this.request('post', 'register', user);\r\n\t}\r\n\r\n\tpublic login(user: TokenPayload): Observable<any> {\r\n\t\treturn this.request('post', 'login', user);\r\n\t}\r\n\r\n\tpublic profile(): Observable<any> {\r\n\t\treturn this.request('get', 'profile');\r\n\t}\r\n\r\n\tpublic transactionFromUser(user, destination, quantity, fee): Observable<any> {\r\n\t\tlet base = this.http.get(`${apiUrl}/usersend`, { \r\n\t\t\theaders: { \r\n\t\t\t\tAuthorization: `Bearer ${this.getToken()}`\r\n\t\t\t},\r\n\t\t\tparams: { \r\n\t\t\t\tuser: `${user}`,\r\n\t\t\t\tdestination: `${destination}`, \r\n\t\t\t\tquantity: `${quantity}`,\r\n\t\t\t\tfee: `${fee}`}\r\n\t\t\t});\r\n\r\n\t\tconst request = base.pipe(\r\n\t\t\tmap((data: TokenResponse) => {\r\n\t\t\t\tif (data.token) {\r\n\t\t\t\t\tthis.saveToken(data.token);\r\n\t\t\t\t}\r\n\t\t\t\treturn data;\r\n\t\t\t})\r\n\t\t);\r\n\t\treturn request;\r\n\t}\r\n\r\n\tpublic transactionFromJob(job_id, comment_id, quantity, fee): Observable<any> {\r\n\t\tlet base = this.http.get(`${apiUrl}/job/${job_id}/jobSend`, { \r\n\t\t\theaders: { \r\n\t\t\t\tAuthorization: `Bearer ${this.getToken()}`\r\n\t\t\t},\r\n\t\t\tparams: { \r\n\t\t\t\tjob_id:`${job_id}`,\r\n\t\t\t\tcomment_id: `${comment_id}`,\r\n\t\t\t\t// destination_user: `${destination_user}`, \r\n\t\t\t\tquantity: `${quantity}`,\r\n\t\t\t\tfee: `${fee}`}\r\n\t\t\t});\r\n\r\n\t\tconst request = base.pipe(\r\n\t\t\tmap((data: TokenResponse) => {\r\n\t\t\t\tif (data.token) {\r\n\t\t\t\t\tthis.saveToken(data.token);\r\n\t\t\t\t}\r\n\t\t\t\treturn data;\r\n\t\t\t})\r\n\t\t);\r\n\t\treturn request;\r\n\t}\r\n\r\n\t// public jobSend(job, destination, comment): Observable<any> {\r\n\t// \tconst httpOptions = {\r\n\t// \t  headers: new HttpHeaders({\r\n\t// \t    'Content-Type':  'application/json',\r\n\t// \t    'Authorization': `Bearer ${this.getToken()}`\r\n\t// \t  })\r\n\t// \t};\r\n\r\n\t// \tlet data = { \r\n\t// \t\tjob_id: `${job}`,\r\n\t// \t\tcomment_id: `${comment}`,\r\n\t// \t\tdestination: `${destination}`\r\n\t// \t};\r\n\r\n\t// \treturn this.http.post(`${apiUrl}/job/${job}/pay`, data, httpOptions\r\n\t// \t).map(res => {\r\n\t// \t\treturn { res }\r\n\t// \t})\r\n\t// }\r\n\r\n\tpublic logout(): void {\r\n\t\tthis.token = '';\r\n\t\twindow.localStorage.removeItem('mean-token');\r\n\t\tthis.router.navigateByUrl('/');\r\n\t}\r\n\r\n}\r\n","import { Observable } from 'rxjs/Rx';\r\n// import { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\n// import { Http } from '@angular/http';\r\n// import { Response } from '@angular/http';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport 'rxjs/add/operator/map';\r\n\r\n@Injectable()\r\nexport class BlockExplorerService {\r\n\r\n\tapi_url = 'https://chain.so/api/v2';\r\n\taddress_balance_url = `${this.api_url}/get_address_balance/BTCTEST/`;\r\n\r\n\tconstructor(private http: HttpClient, private router: Router) {}\r\n\r\n\r\n\tpublic get_addr(address): Observable<any> {\r\n\t\treturn this.http.get(this.address_balance_url + address)\r\n\t}\r\n\r\n\t//Default Error handling method.\r\n\tprivate handleError(error: any): Promise<any> {\r\n\t\tconsole.error('An error occurred', error); // for demo purposes only\r\n\t\treturn Promise.reject(error.message || error);\r\n\t}\r\n\r\n}","import Comment from './models/comment';\r\nimport { Observable } from 'rxjs/Rx';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\n// import { Response } from '@angular/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from '../environments/environment';\r\n\r\nimport 'rxjs/add/operator/map';\r\n\r\n@Injectable()\r\nexport class CommentService {\r\n\r\n\tapi_url = environment.api_url;\r\n\tjobUrl = `${this.api_url}/api/job`;\r\n\r\n\tconstructor(\r\n\t\tprivate http: HttpClient\r\n\t) { }\r\n\r\n\tpostComment(comment: Comment): Observable<any>{\r\n\t\tvar jobId = comment.jobId;\r\n\t\treturn this.http.post(`${this.jobUrl}/` + jobId + \"/comments/submit\", comment)\r\n\t\t.map(res => {\r\n\t\t\treturn { commentId: res[\"data\"]._id, }\r\n\t\t})\r\n\t}\r\n\r\n\tgetComments(jobId: string): Observable<any>{\r\n\t\treturn this.http.get(`${this.jobUrl}/` + jobId + \"/comments\")\r\n\t\t.map(res  => {\r\n\t\t\treturn { commentList: res[\"data\"] } ;\r\n\t\t})\r\n\t}\r\n\r\n\t//Default Error handling method.\r\n\tprivate handleError(error: any): Promise<any> {\r\n\t\tconsole.error('An error occurred', error); // for demo purposes only\r\n\t\treturn Promise.reject(error.message || error);\r\n\t}\r\n\r\n}","module.exports = \".comment-form {\\r\\n\\tmargin: .5em 0;\\r\\n\\tpadding: .5em 1em;\\r\\n}\\r\\n\\r\\n.btn-comment {\\r\\n\\tmargin-top: auto;\\r\\n}\\r\\n\\r\\n.comment-list {\\r\\n\\tlist-style: none;\\r\\n\\tmargin-left: -40px;\\r\\n}\\r\\n\\r\\n.comment-item {\\r\\n\\tborder: 1px solid #CCCCCC;\\r\\n\\tbackground: #ebdcc6;\\r\\n\\tmargin: .5em 0;\\r\\n\\tpadding: .5em 1em;\\r\\n}\\r\\n\\r\\n.comment-content p {\\r\\n\\tfont-size:18px;\\r\\n\\tpadding-left: 1em;\\r\\n}\\r\\n\\r\\n.comment-bar {\\r\\n\\tborder-top: 1px solid #EEEEEE;\\r\\n\\tmargin-top: -20px;\\r\\n}\\r\\n\\r\\ntable {\\r\\n\\twidth: 100%;\\r\\n}\\r\\n\\r\\n.tleft {\\r\\n\\ttext-align: left;\\r\\n}\\r\\n\\r\\n.tright {\\r\\n\\ttext-align: right;\\r\\n}\\r\\n\\r\\n#comments-frame {\\r\\n\\t/*background: #edf8f0;*/\\r\\n\\tmargin-top:2em;\\r\\n\\tborder: 2px solid #CCCCCC;\\r\\n}\\r\\n\\r\\n#comment-post{\\r\\n\\tfloat: right;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tbWVudHMvY29tbWVudHMuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtDQUNDLGNBQWM7Q0FDZCxpQkFBaUI7QUFDbEI7O0FBRUE7Q0FDQyxnQkFBZ0I7QUFDakI7O0FBRUE7Q0FDQyxnQkFBZ0I7Q0FDaEIsa0JBQWtCO0FBQ25COztBQUNBO0NBQ0MseUJBQXlCO0NBQ3pCLG1CQUFtQjtDQUNuQixjQUFjO0NBQ2QsaUJBQWlCO0FBQ2xCOztBQUNBO0NBQ0MsY0FBYztDQUNkLGlCQUFpQjtBQUNsQjs7QUFFQTtDQUNDLDZCQUE2QjtDQUM3QixpQkFBaUI7QUFDbEI7O0FBRUE7Q0FDQyxXQUFXO0FBQ1o7O0FBQ0E7Q0FDQyxnQkFBZ0I7QUFDakI7O0FBQ0E7Q0FDQyxpQkFBaUI7QUFDbEI7O0FBRUE7Q0FDQyx1QkFBdUI7Q0FDdkIsY0FBYztDQUNkLHlCQUF5QjtBQUMxQjs7QUFFQTtDQUNDLFlBQVk7QUFDYiIsImZpbGUiOiJzcmMvYXBwL2NvbW1lbnRzL2NvbW1lbnRzLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY29tbWVudC1mb3JtIHtcclxuXHRtYXJnaW46IC41ZW0gMDtcclxuXHRwYWRkaW5nOiAuNWVtIDFlbTtcclxufVxyXG5cclxuLmJ0bi1jb21tZW50IHtcclxuXHRtYXJnaW4tdG9wOiBhdXRvO1xyXG59XHJcblxyXG4uY29tbWVudC1saXN0IHtcclxuXHRsaXN0LXN0eWxlOiBub25lO1xyXG5cdG1hcmdpbi1sZWZ0OiAtNDBweDtcclxufVxyXG4uY29tbWVudC1pdGVtIHtcclxuXHRib3JkZXI6IDFweCBzb2xpZCAjQ0NDQ0NDO1xyXG5cdGJhY2tncm91bmQ6ICNlYmRjYzY7XHJcblx0bWFyZ2luOiAuNWVtIDA7XHJcblx0cGFkZGluZzogLjVlbSAxZW07XHJcbn1cclxuLmNvbW1lbnQtY29udGVudCBwIHtcclxuXHRmb250LXNpemU6MThweDtcclxuXHRwYWRkaW5nLWxlZnQ6IDFlbTtcclxufVxyXG5cclxuLmNvbW1lbnQtYmFyIHtcclxuXHRib3JkZXItdG9wOiAxcHggc29saWQgI0VFRUVFRTtcclxuXHRtYXJnaW4tdG9wOiAtMjBweDtcclxufVxyXG5cclxudGFibGUge1xyXG5cdHdpZHRoOiAxMDAlO1xyXG59XHJcbi50bGVmdCB7XHJcblx0dGV4dC1hbGlnbjogbGVmdDtcclxufVxyXG4udHJpZ2h0IHtcclxuXHR0ZXh0LWFsaWduOiByaWdodDtcclxufVxyXG5cclxuI2NvbW1lbnRzLWZyYW1lIHtcclxuXHQvKmJhY2tncm91bmQ6ICNlZGY4ZjA7Ki9cclxuXHRtYXJnaW4tdG9wOjJlbTtcclxuXHRib3JkZXI6IDJweCBzb2xpZCAjQ0NDQ0NDO1xyXG59XHJcblxyXG4jY29tbWVudC1wb3N0e1xyXG5cdGZsb2F0OiByaWdodDtcclxufSJdfQ== */\"","import { HttpClient } from '@angular/common/http';\r\nimport { CommentService } from '../comment.service';\r\nimport { JobService } from '../job.service';\r\nimport { AuthenticationService, TokenPayload } from '../authentication.service';\r\nimport CommentModel from '../models/comment';\r\nimport { Component, OnInit, ElementRef, ViewChild, Input } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { markdown } from 'markdown';\r\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\r\nimport { ConfirmationPopoverModule } from 'angular-confirmation-popover';\r\nimport JobModel from '../models/job';\r\n\r\n@Component({\r\n  selector: 'app-comments',\r\n  templateUrl: './comments.component.html',\r\n  styleUrls: ['./comments.component.css']\r\n})\r\nexport class CommentsComponent implements OnInit {\r\n\t@Input() api_data_job: any = {};\r\n\r\n\tprivate form: FormGroup;\r\n\tprivate isLoggedIn = this.auth.isLoggedIn();\r\n\tprivate job: JobModel;\r\n\tprivate jobId: string;\r\n\tprivate isJobAuthor = false;\r\n\tprivate sub: any;\r\n\tprivate commentList: CommentModel[];\r\n\tprivate newComment: CommentModel = new CommentModel();\r\n\r\n\tprivate payOpenFor = \"\";\r\n\r\n\tpublic popoverTitle: string = 'Select For Payment';\r\n\tpublic popoverMessage : String;\r\n\tpublic confirmClicked: boolean = false;\r\n\tpublic cancelClicked: boolean = false;\r\n\r\n\t@ViewChild('fileInput', {static: false}) fileInput: ElementRef;\r\n\r\n\tngOnInit(): void {\r\n\r\n\t\tthis.sub = this.route.params.subscribe(params => {\r\n\t\t\tthis.jobId = params['id'];\r\n\t\t\tthis.jobService.getJob(this.jobId).subscribe(params => {\r\n\t\t\t    this.job = params.job;\r\n\t\t\t    if (this.isLoggedIn) {\r\n\t\t\t\t\tthis.newComment.jobId = this.jobId;\r\n\t\t\t\t\tthis.newComment.author = this.auth.getUserDetails().name;\r\n\t\t\t\r\n\t\t\t    \tif (this.newComment.author == this.job.author) {\r\n\t\t\t\t\t\tthis.isJobAuthor = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\tthis.commentService.getComments(this.jobId)\r\n\t\t  .subscribe(comments => {\r\n\t\t\tthis.commentList = comments.commentList;\r\n\t\t});\r\n\t}\r\n\r\n\tconstructor(\r\n\t\tprivate auth: AuthenticationService,\r\n\t\tprivate commentService: CommentService,\r\n\t\tprivate jobService: JobService,\r\n\t\tprivate router: Router,\r\n\t\tprivate route: ActivatedRoute,\r\n\t\tprivate fb: FormBuilder) {\r\n\tthis.createForm();\r\n\tthis.newComment = new CommentModel();\r\n\r\n\t}\r\n\r\n\t\r\n\tcreateForm() {\r\n\t\tthis.form = this.fb.group({\r\n\t\t\tcontent: ['', Validators.required]\r\n\t\t});\r\n\t}\r\n\r\n\tonFileChange(event) {\r\n\tlet reader = new FileReader();\r\n\t    if(event.target.files && event.target.files.length > 0) {\r\n\t      let file = event.target.files[0];\r\n\t      reader.readAsDataURL(file);\r\n\t      reader.onload = () => {\r\n\t      \tconsole.log(file.type);\r\n\t      \tthis.newComment.image_type = file.type;\r\n\t      \tthis.newComment.image = (reader.result as string).split(',')[1];\r\n\t      };\r\n\t    }\r\n  \t}\r\n\r\n\tonSubmit() {\r\n\t\tthis.newComment.content = this.form.get('content').value;\r\n\t    this.postComment();\r\n\t}\r\n\r\n\tpostComment() {\r\n\t\tthis.commentService.postComment(this.newComment)\r\n\t\t.subscribe((res) => {\r\n\t\t\tthis.commentList.push(this.newComment);\r\n\t\t});\r\n\r\n\t\tthis.commentService.getComments(this.jobId)\r\n\t\t.subscribe(comments => {\r\n\t\t\tthis.commentList = comments.commentList;\r\n\t\t});\r\n\t}\r\n\r\n\tshowImage(comment: CommentModel): any {\r\n    \treturn 'data:'+  comment.image_type + ';base64,' + comment.image;\r\n\t}\r\n\r\n\tpay(selectedComment: CommentModel) {\r\n\t\tif (this.payOpenFor == \"\") {\r\n\t\t\tthis.payOpenFor = selectedComment._id;\r\n\t\t} else {\r\n\t\t\tthis.payOpenFor = \"\";\r\n\t\t}\r\n\t\tconsole.log(this.api_data_job.confirmed_balance);\r\n\t\t// this.popoverMessage = \"Are you sure you want this user to recieve your job's funds \" + this.api_data_job.confirmed_balance*1 + \" tBTC)?\";\r\n\r\n\t}\r\n\r\n\t// paySubmission(selectedComment: CommentModel) {\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t// \tthis.auth.transactionFromJob(this.job._id, selectedComment._id, selectedComment._id)\r\n\t// \t.subscribe( res => {\r\n\t// \t\tconsole.log(res);\r\n\t// \t}, (err) => {\r\n\t// \t\tconsole.error(err);\r\n\t// \t});\r\n\t// }\r\n\r\n}\r\n\r\n// (user, job, destination, quantity, fee):","module.exports = \".job-list {\\r\\n\\tlist-style: none;\\r\\n\\tmargin-left: -40px;\\r\\n}\\r\\n\\r\\n.job-item {\\r\\n\\tborder: 2px solid #CCCCCC;\\r\\n\\tbackground: #edf8f0;\\r\\n\\tmargin: .5em 0;\\r\\n\\tpadding: 1em 1em;\\r\\n\\t/*padding-left: 40px;*/\\r\\n}\\r\\n\\r\\n.job-title {\\r\\n\\tfont-size: 30px;\\r\\n}\\r\\n\\r\\n.job-description {\\r\\n\\tfont-size: 18px;\\r\\n}\\r\\n\\r\\n.job-date {\\r\\n\\tfloat:right;\\r\\n}\\r\\n\\r\\n.page-number {\\t\\r\\n\\tdisplay:inline-block;\\r\\n\\ttext-align:center;\\r\\n\\tborder:1px solid #CCCCCC;\\r\\n\\tbackground: #FAFAFA;\\r\\n\\tmargin-right:5px;\\r\\n\\tpadding:0 5px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZmluZGpvYi9maW5kam9iLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Q0FDQyxnQkFBZ0I7Q0FDaEIsa0JBQWtCO0FBQ25COztBQUVBO0NBQ0MseUJBQXlCO0NBQ3pCLG1CQUFtQjtDQUNuQixjQUFjO0NBQ2QsZ0JBQWdCO0NBQ2hCLHNCQUFzQjtBQUN2Qjs7QUFFQTtDQUNDLGVBQWU7QUFDaEI7O0FBRUE7Q0FDQyxlQUFlO0FBQ2hCOztBQUVBO0NBQ0MsV0FBVztBQUNaOztBQUVBO0NBQ0Msb0JBQW9CO0NBQ3BCLGlCQUFpQjtDQUNqQix3QkFBd0I7Q0FDeEIsbUJBQW1CO0NBQ25CLGdCQUFnQjtDQUNoQixhQUFhO0FBQ2QiLCJmaWxlIjoic3JjL2FwcC9maW5kam9iL2ZpbmRqb2IuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5qb2ItbGlzdCB7XHJcblx0bGlzdC1zdHlsZTogbm9uZTtcclxuXHRtYXJnaW4tbGVmdDogLTQwcHg7XHJcbn1cclxuXHJcbi5qb2ItaXRlbSB7XHJcblx0Ym9yZGVyOiAycHggc29saWQgI0NDQ0NDQztcclxuXHRiYWNrZ3JvdW5kOiAjZWRmOGYwO1xyXG5cdG1hcmdpbjogLjVlbSAwO1xyXG5cdHBhZGRpbmc6IDFlbSAxZW07XHJcblx0LypwYWRkaW5nLWxlZnQ6IDQwcHg7Ki9cclxufVxyXG5cclxuLmpvYi10aXRsZSB7XHJcblx0Zm9udC1zaXplOiAzMHB4O1xyXG59XHJcblxyXG4uam9iLWRlc2NyaXB0aW9uIHtcclxuXHRmb250LXNpemU6IDE4cHg7XHJcbn1cclxuXHJcbi5qb2ItZGF0ZSB7XHJcblx0ZmxvYXQ6cmlnaHQ7XHJcbn1cclxuXHJcbi5wYWdlLW51bWJlciB7XHRcclxuXHRkaXNwbGF5OmlubGluZS1ibG9jaztcclxuXHR0ZXh0LWFsaWduOmNlbnRlcjtcclxuXHRib3JkZXI6MXB4IHNvbGlkICNDQ0NDQ0M7XHJcblx0YmFja2dyb3VuZDogI0ZBRkFGQTtcclxuXHRtYXJnaW4tcmlnaHQ6NXB4O1xyXG5cdHBhZGRpbmc6MCA1cHg7XHJcbn0iXX0= */\"","// import { Response } from '@angular/http';\nimport { JobService } from '../job.service';\nimport JobModel from '../models/job';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n\n@Component({\n\tselector: 'app-findjob',\n\ttemplateUrl: './findjob.component.html',\n\tstyleUrls: ['./findjob.component.css']\n})\nexport class FindJobComponent implements OnInit {\n\n\tconstructor(\n\t\tprivate jobService: JobService,\n\t\tprivate router: Router\n\t) { }\n\n\tjobList: JobModel[];\n\tpageCount: number;\n\tpageNumber = 1;\n\n\tngOnInit(): void {\n\t\tthis.jobService.getJobs(this.pageNumber)\n\t\t\t.subscribe(jobs => {\n\t\t\t\tthis.jobList = jobs.jobList\n\t\t\t\tthis.pageCount = jobs.pageCount\n\t\t\t});\n\t}\n\n\tgoToJob(jobId) {\n\t\tthis.router.navigate(['/job/' + jobId]);\n\t}\n\n\tchangePage(newPage) {\n\tthis.jobService.getJobs(newPage)\n\t.subscribe(jobs => {\n\t\t\t\tthis.jobList = jobs.jobList\n\t\t\t\tthis.pageCount = jobs.pageCount\n\t\t\t});\n\tthis.pageNumber = newPage;\n\t}\n\ncountPages() {\n\tvar pages = [];\n\t\tfor (var i = 0; i < this.pageCount; i++) {\n\t\t\tpages.push(i+1);\n\t\t}\n\t\treturn pages;\n\t}\n\n}","import { Component } from '@angular/core';\n\n@Component({\n  templateUrl: './home.component.html'\n})\nexport class HomeComponent {}\n","import Job from './models/job';\r\nimport { Observable } from 'rxjs/Rx';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\n// import { Response } from '@angular/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from '../environments/environment';\r\n\r\nimport 'rxjs/add/operator/map';\r\n\r\n@Injectable()\r\nexport class JobService {\r\n\r\n\tapi_url = environment.api_url;\r\n\tpostUrl = `${this.api_url}/api/post`;\r\n\tfindUrl = `${this.api_url}/api/find`;\r\n\tjobUrl = `${this.api_url}/api/job`;\r\n\r\n\tconstructor(\r\n\t\tprivate http: HttpClient\r\n\t) { }\r\n\r\n\tcreateJob(job: Job): Observable<any>{\r\n\t\treturn this.http.post(`${this.postUrl}/submit`, job)\r\n\t\t.map(res => {\r\n\t\t\treturn { jobId: res[\"data\"]._id, }\r\n\t\t})\r\n\t}\r\n\r\n\tgetJob(id: string): Observable<any>{\r\n\t\treturn this.http.get(`${this.jobUrl}/` + id)\r\n\t\t.map(res  => {\r\n\t\t\treturn { job: res[\"data\"] } ;\r\n\t\t})\r\n\t}\r\n\r\n\tgetJobs(page: number): Observable<any>{\r\n\t\treturn this.http.get(`${this.findUrl}?page=` + page)\r\n\t\t.map(res  => {\r\n\t\t\treturn { jobList: res[\"data\"].docs, pageCount: res[\"data\"].pages} ;\r\n\t\t})\r\n\t}\r\n\r\n\t//Default Error handling method.\r\n\tprivate handleError(error: any): Promise<any> {\r\n\t\tconsole.error('An error occurred', error); // for demo purposes only\r\n\t\treturn Promise.reject(error.message || error);\r\n\t}\r\n\r\n}","module.exports = \".listing {\\r\\n\\tborder: 2px solid #CCCCCC;\\r\\n\\tbackground: #edf8f0;\\r\\n\\tpadding: 1em;\\r\\n}\\r\\n\\r\\n.job-title {\\r\\n\\tfont-size: 2em;\\r\\n}\\r\\n\\r\\n#fundMe {\\r\\n\\tmargin-top:1em;\\r\\n}\\r\\n\\r\\n.red-text {\\r\\n\\tcolor:red;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvam9iL2pvYi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0NBQ0MseUJBQXlCO0NBQ3pCLG1CQUFtQjtDQUNuQixZQUFZO0FBQ2I7O0FBRUE7Q0FDQyxjQUFjO0FBQ2Y7O0FBRUE7Q0FDQyxjQUFjO0FBQ2Y7O0FBRUE7Q0FDQyxTQUFTO0FBQ1YiLCJmaWxlIjoic3JjL2FwcC9qb2Ivam9iLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubGlzdGluZyB7XHJcblx0Ym9yZGVyOiAycHggc29saWQgI0NDQ0NDQztcclxuXHRiYWNrZ3JvdW5kOiAjZWRmOGYwO1xyXG5cdHBhZGRpbmc6IDFlbTtcclxufVxyXG5cclxuLmpvYi10aXRsZSB7XHJcblx0Zm9udC1zaXplOiAyZW07XHJcbn1cclxuXHJcbiNmdW5kTWUge1xyXG5cdG1hcmdpbi10b3A6MWVtO1xyXG59XHJcblxyXG4ucmVkLXRleHQge1xyXG5cdGNvbG9yOnJlZDtcclxufSJdfQ== */\"","// import { Response } from '@angular/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Validators, FormBuilder, FormGroup, ReactiveFormsModule, FormsModule } from '@angular/forms';\r\n\r\nimport { CommentsComponent } from '../comments/comments.component';\r\nimport { BlockExplorerService } from '../blockexplorer.service';\r\nimport { JobService } from '../job.service';\r\nimport JobModel from '../models/job';\r\nimport UserModel from '../models/user';\r\nimport { AuthenticationService, TokenPayload } from '../authentication.service';\r\nimport { ConfirmationPopoverModule } from 'angular-confirmation-popover';\r\nimport { TransactionComponent } from '../transaction/transaction.component';\r\n\r\n\r\n@Component({\r\n\tselector: 'app-job',\r\n\ttemplateUrl: './job.component.html',\r\n\tstyleUrls: ['./job.component.css']\r\n})\r\nexport class JobComponent implements OnInit {\r\n\tjobId: string;\r\n\tjob: JobModel;\r\n\tuser: UserModel;\r\n\tapi_data_job: any = {};\r\n\tprivate sub: any;\r\n\r\n\tprivate isLoggedIn: boolean;\r\n\tprivate isJobAuthor = false;\r\n\tprivate isFundingOpen = false;\r\n\tform: FormGroup;\r\n\tsubmitted = false;\r\n\tconfirmed = false;\r\n\ttxid = 0;  \r\n\r\n\tconstructor(\r\n\t\tprivate jobService: JobService,\r\n\t\tprivate route: ActivatedRoute,\r\n\t\tprivate blockexplorer: BlockExplorerService,\r\n\t\tprivate fb: FormBuilder,\r\n\t\tprivate auth: AuthenticationService) {\r\n\t\tthis.isLoggedIn = this.auth.isLoggedIn();\r\n\t}\r\n\r\n\tngOnInit(): void {\r\n\t\tthis.sub = this.route.params.subscribe(params => {\r\n\t\t\t this.jobId = params['id'];\r\n\t\t});\r\n\r\n\t\t// get job\r\n\t\tthis.jobService.getJob(this.jobId)\r\n\t\t\t.subscribe(params => {\r\n\t\t\t\tthis.job = params.job;\r\n\r\n\t\t\t\t// get job address balance\r\n\t\t\t\tthis.blockexplorer.get_addr(this.job.address).subscribe(res => {\r\n\t\t\t\t\tthis.api_data_job = res.data;\r\n\t\t\t\t})\r\n\r\n\t\t\t\t// get user\r\n\t\t\t\tif (this.isLoggedIn) {\r\n\t\t\t\t\tthis.auth.profile().subscribe(user => {\r\n\t\t\t\t\t\tthis.user = user;\r\n\t\t\t\t\t\tif (this.user.name == this.job.author) {\r\n\t\t\t\t\t\t\tthis.isJobAuthor = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\r\n\t}\r\n\r\n\tfundMe() {\r\n\t\tif (!this.submitted) {\r\n\t\t\tthis.isFundingOpen = !this.isFundingOpen;\r\n\t\t}\r\n\t}\r\n\r\n}","import { Component } from '@angular/core';\nimport { AuthenticationService, TokenPayload } from '../authentication.service';\nimport { Router } from '@angular/router';\n\n@Component({\n\ttemplateUrl: './login.component.html'\n})\nexport class LoginComponent {\n\tcredentials: TokenPayload = {\n\t\tname: '',\n\t\tpassword: ''\n\t};\n\n\tconstructor(private auth: AuthenticationService, private router: Router) {}\n\n\tlogin() {\n\t\tthis.auth.login(this.credentials).subscribe(() => {\n\t\t\tthis.router.navigateByUrl('/profile');\n\t\t}, (err) => {\n\t\t\tconsole.error(err);\n\t\t}); \n\t}\n}\n","class Comment {\r\n\t_id: string;\r\n\tjobId: string;\r\n\tparentId: string;\r\n\tauthorId: string;\r\n\tcontent: string;\r\n\tauthor: string;\r\n\tdate_created: Date;\r\n\timage: string;\r\n\timage_type: string;\r\n\tearned: number\r\n\r\n\tconstructor() {\r\n\t\tthis.jobId = \"\"\r\n\t\tthis.parentId = \"\"\r\n\t\tthis.content = \"\"\r\n\t\tthis.author = \"\"\r\n\t\tthis.date_created = new Date()\r\n\t\tthis.image = \"\"\r\n\t\tthis.image_type = \"\"\r\n\t\tthis.earned = 0\r\n\t}\r\n}\r\n\r\n\r\nexport default Comment;","class Job {\n\t_id: string;\n\ttitle: string;\n\tauthor: string;\n\tdescription: string;\n\tdate_created: Date;\n\taddress: string;\n\n\tconstructor() {\n\t\tthis._id = \"\"\n\t\tthis.title = \"\"\n\t\tthis.description = \"\"\n\t\tthis.author = \"\"\n\t\tthis.date_created = new Date()\n\t\tthis.address = \"\"\n\t}\n\n\tsetAuthor(author: string) {\n\t\tthis.author = author;\n\t}\n}\n\nexport default Job;","module.exports = \".form-invalid {\\n\\tcolor: red;\\n}\\n\\n#message-login {\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcG9zdGpvYi9wb3N0am9iLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Q0FDQyxVQUFVO0FBQ1g7O0FBRUE7QUFDQSIsImZpbGUiOiJzcmMvYXBwL3Bvc3Rqb2IvcG9zdGpvYi5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmZvcm0taW52YWxpZCB7XG5cdGNvbG9yOiByZWQ7XG59XG5cbiNtZXNzYWdlLWxvZ2luIHtcbn0iXX0= */\"","import { Component } from '@angular/core';\nimport { Observable } from 'rxjs/Rx';\nimport { AuthenticationService, TokenPayload } from '../authentication.service';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { JobService } from '../job.service';\nimport JobModel from '../models/job';\nimport { Router } from '@angular/router';\nimport { Validators, FormBuilder, FormGroup, ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { markdown } from 'markdown';\n\n\n@Component({\n\ttemplateUrl: './postjob.component.html',\n\tstyleUrls: ['./postjob.component.css']\n})\n\nexport class PostJobComponent {\n\tform: FormGroup;\n\tsubmitted = false;\n\n\tconstructor(\n\t\tprivate auth: AuthenticationService, \n\t\tprivate jobService: JobService, \n\t\tprivate router: Router,\n\t\tprivate http: HttpClient,\n\t\tprivate fb: FormBuilder) {\n\t\tthis.createForm();\n\t}\n\n\tpublic newJob: JobModel = new JobModel()\n\tpublic isLoggedIn = this.auth.isLoggedIn();\n\tjobId = String;\n\n\tcreateForm() {\n\t\tthis.form = this.fb.group({\n\t\t\ttitle: ['', Validators.required],\n\t\t\tdescription: ['', Validators.required]\n\t\t});\n\t}\n\n\tonSubmit() {\n\t\tthis.submitted = true;\n\t\tif (this.form.invalid) {\n\t\t\t\treturn;\n\t\t}\n\t\tthis.postJob();\n\t}\n\n\tpostJob() {\n\t\tthis.newJob.author = this.auth.getUserDetails().name;\n\t\tthis.newJob.title = this.form.get('title').value;\n\t\tthis.newJob.description = markdown.toHTML(this.form.get('description').value);\n\n\t\tthis.jobService.createJob(this.newJob)\n\t\t\t.subscribe((res) => {\n\t\t\t\tthis.jobId = res.jobId\n\t\t\t\tthis.router.navigate(['/job/' + this.jobId]);\n\t\t\t});\n\n\t}\n\n} \n\n","module.exports = \"h1 {\\r\\n\\tmargin-bottom: .75em;\\r\\n}\\r\\n\\r\\n.form-control-static-red {\\r\\n\\tcolor:red;\\r\\n}\\r\\n\\r\\n#withdrawal {\\r\\n\\tpadding-left: 15px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcHJvZmlsZS9wcm9maWxlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Q0FDQyxvQkFBb0I7QUFDckI7O0FBRUE7Q0FDQyxTQUFTO0FBQ1Y7O0FBRUE7Q0FDQyxrQkFBa0I7QUFDbkIiLCJmaWxlIjoic3JjL2FwcC9wcm9maWxlL3Byb2ZpbGUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImgxIHtcclxuXHRtYXJnaW4tYm90dG9tOiAuNzVlbTtcclxufVxyXG5cclxuLmZvcm0tY29udHJvbC1zdGF0aWMtcmVkIHtcclxuXHRjb2xvcjpyZWQ7XHJcbn1cclxuXHJcbiN3aXRoZHJhd2FsIHtcclxuXHRwYWRkaW5nLWxlZnQ6IDE1cHg7XHJcbn0iXX0= */\"","import { Component } from '@angular/core';\r\nimport { AuthenticationService, UserDetails } from '../authentication.service';\r\nimport { BlockExplorerService } from '../blockexplorer.service';\r\nimport UserModel from '../models/user';\r\n\r\n@Component({\r\n\ttemplateUrl: './profile.component.html',\r\n\tstyleUrls: ['./profile.component.css']\r\n})\r\nexport class ProfileComponent {\r\n\tprofile: UserModel;\r\n\tbalance: 0;\r\n\tisWithdrawing = false;\r\n\r\n\tapi_data: any = {};\r\n\r\n\tconstructor(\r\n\t\tprivate auth: AuthenticationService,\r\n\t\tprivate blockexplorer: BlockExplorerService\r\n\t) { }\r\n\t\r\n\tngOnInit() {    \r\n\t\tthis.auth.profile().subscribe(res => {\r\n\t\t\tthis.profile = res.profile;\r\n\t\t\t// console.log(\"profile: \" + JSON.stringify(this.profile));\r\n\t\t\t// console.log(\"profile_address: \" + this.profile.address);\r\n\t\t\tthis.blockexplorer.get_addr(this.profile.address).subscribe(res => {\r\n\t\t\t\tthis.api_data = res.data;\r\n\t\t\t})\r\n\t\t}, (err) => {\r\n\t\t\tconsole.error(err);\r\n\t\t});\r\n\t}\r\n\r\n\twithdrawal() {\r\n      this.isWithdrawing = !this.isWithdrawing;\r\n  }\r\n\r\n}\r\n","module.exports = \".form-invalid {\\n\\tcolor: red;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcmVnaXN0ZXIvcmVnaXN0ZXIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtDQUNDLFVBQVU7QUFDWCIsImZpbGUiOiJzcmMvYXBwL3JlZ2lzdGVyL3JlZ2lzdGVyLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZm9ybS1pbnZhbGlkIHtcblx0Y29sb3I6IHJlZDtcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { AuthenticationService, TokenPayload } from '../authentication.service';\r\nimport { Router } from '@angular/router';\r\nimport { Validators, FormBuilder, FormGroup, ReactiveFormsModule, FormsModule } from '@angular/forms';\r\n\r\n@Component({\r\n\ttemplateUrl: './register.component.html',\r\n\tstyleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent {\r\n\tform: FormGroup;\r\n\tsubmitted = false;\r\n\t\r\n\t// credentials will recieve values from formbuilder after submit\r\n\tcredentials: TokenPayload = {\r\n\t\tname: '',\r\n\t\tpassword: ''\r\n\t};\r\n\r\n\tconstructor(\r\n\t\tprivate auth: AuthenticationService,\r\n\t\tprivate router: Router,\r\n\t\tprivate fb: FormBuilder) {\r\n\t\tthis.createForm();\r\n\t}\r\n\r\n\tcreateForm() {\r\n\t\tthis.form = this.fb.group({\r\n\t\t\tname: ['', Validators.required],\r\n\t\t\tpassword: ['', Validators.required]\r\n\t\t});\r\n\t}\r\n\r\n\tonSubmit() {\r\n\t\t\t\tthis.submitted = true;\r\n\t\t\t\tif (this.form.invalid) return;\r\n\t\t\t\tthis.register();\r\n\t}\r\n\r\n\tregister() {\r\n\t\tthis.credentials.name = this.form.get('name').value;\r\n\t\tthis.credentials.password = this.form.get('password').value;\r\n\r\n\t\tthis.auth.register(this.credentials).subscribe(() => {\r\n\t\t\tthis.router.navigateByUrl('/profile');\r\n\t\t}, (err) => {\r\n\t\t\tconsole.error(err);\r\n\t\t});\r\n\t}\r\n}\r\n","module.exports = \"#transaction {\\r\\n\\tborder: 2px solid #CCCCCC;\\r\\n\\tpadding: 2em;\\r\\n\\tmargin-top: 1em;\\r\\n\\tbackground: #d0ecd9;\\r\\n}\\r\\n\\r\\n.form-invalid {\\r\\n\\tcolor: red;\\r\\n}\\r\\n\\r\\n.form-success {\\r\\n\\tcolor: green;\\r\\n}\\r\\n\\r\\n.confirmation {\\r\\n\\tmargin-top: .5em;\\r\\n}\\r\\n\\r\\n.red-text {\\r\\n\\tcolor: red;\\r\\n\\tmargin: 0;\\r\\n}\\r\\n\\r\\n.message-login {\\r\\n\\tmargin: 0;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdHJhbnNhY3Rpb24vdHJhbnNhY3Rpb24uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtDQUNDLHlCQUF5QjtDQUN6QixZQUFZO0NBQ1osZUFBZTtDQUNmLG1CQUFtQjtBQUNwQjs7QUFFQTtDQUNDLFVBQVU7QUFDWDs7QUFFQTtDQUNDLFlBQVk7QUFDYjs7QUFFQTtDQUNDLGdCQUFnQjtBQUNqQjs7QUFFQTtDQUNDLFVBQVU7Q0FDVixTQUFTO0FBQ1Y7O0FBRUE7Q0FDQyxTQUFTO0FBQ1YiLCJmaWxlIjoic3JjL2FwcC90cmFuc2FjdGlvbi90cmFuc2FjdGlvbi5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiI3RyYW5zYWN0aW9uIHtcclxuXHRib3JkZXI6IDJweCBzb2xpZCAjQ0NDQ0NDO1xyXG5cdHBhZGRpbmc6IDJlbTtcclxuXHRtYXJnaW4tdG9wOiAxZW07XHJcblx0YmFja2dyb3VuZDogI2QwZWNkOTtcclxufVxyXG5cclxuLmZvcm0taW52YWxpZCB7XHJcblx0Y29sb3I6IHJlZDtcclxufVxyXG5cclxuLmZvcm0tc3VjY2VzcyB7XHJcblx0Y29sb3I6IGdyZWVuO1xyXG59XHJcblxyXG4uY29uZmlybWF0aW9uIHtcclxuXHRtYXJnaW4tdG9wOiAuNWVtO1xyXG59XHJcblxyXG4ucmVkLXRleHQge1xyXG5cdGNvbG9yOiByZWQ7XHJcblx0bWFyZ2luOiAwO1xyXG59XHJcblxyXG4ubWVzc2FnZS1sb2dpbiB7XHJcblx0bWFyZ2luOiAwO1xyXG59Il19 */\"","// import { Response } from '@angular/http';\r\nimport { Component, OnInit, Input } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Validators, FormBuilder, FormGroup, ReactiveFormsModule, FormsModule } from '@angular/forms';\r\n\r\nimport { CommentsComponent } from '../comments/comments.component';\r\nimport { BlockExplorerService } from '../blockexplorer.service';\r\nimport UserModel from '../models/user';\r\nimport { AuthenticationService, TokenPayload } from '../authentication.service';\r\nimport { ConfirmationPopoverModule } from 'angular-confirmation-popover';\r\n\r\n\r\n@Component({\r\n  selector: 'app-transaction',\r\n  templateUrl: './transaction.component.html',\r\n  styleUrls: ['./transaction.component.css']\r\n})\r\nexport class TransactionComponent implements OnInit {\r\n\tprivate isLoggedIn: boolean;\r\n\tfromJob = false; // not called from job page\r\n\thasDestination = false; // not called from withdraw\r\n\r\n\t@Input() destination_address? = \"\";\r\n\t@Input() destination_comment?;\r\n\t@Input() source_job?;\r\n\r\n\tapi_dataIsJobs = false;\r\n\t@Input() api_data_job?;\r\n\tapi_data: any = {};\r\n\r\n\tform: FormGroup;\r\n\tsubmitted = false;\r\n\tconfirmed = false;\r\n\tuser: UserModel;\r\n\r\n\ttxid = 0;\r\n\r\n\tconstructor(\r\n\t\tprivate route: ActivatedRoute,\r\n\t\tprivate blockexplorer: BlockExplorerService,\r\n\t\tprivate fb: FormBuilder,\r\n\t\tprivate auth: AuthenticationService) {\r\n\tthis.createForm();\r\n\tthis.isLoggedIn = this.auth.isLoggedIn();\r\n\t}\r\n\r\n\tngOnInit(): void {\r\n\t\tif (!this.api_data_job) {\r\n\t\t\tthis.fromJob = false;\r\n\t\t\tthis.auth.profile().subscribe(res => {\r\n\t\t\t\tthis.user = res.profile;\r\n\t\t\t\tthis.blockexplorer.get_addr(this.user.address).subscribe(res => {\r\n\t\t\t\t\tthis.api_data = res.data;\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t} else {\r\n\t\t\tthis.fromJob = true;\r\n\t\t\tthis.api_data = this.api_data_job;\r\n\t\t\tthis.form.controls.tx_destination.setValue(this.destination_comment._id);\r\n\t\t\tthis.hasDestination = true;\r\n\t\t\t\r\n\t\t}\r\n\r\n\t\tif (this.destination_address != \"\") {\r\n\t\t\tthis.form.controls.tx_destination.setValue(this.destination_address);\r\n\t\t\tthis.hasDestination = true;\r\n\t\t}\r\n\r\n\t\t\r\n\r\n\t}\r\n\r\n\tcreateForm() {\r\n\t\tthis.form = this.fb.group({\r\n\t\t\ttx_destination: ['', Validators.required],\r\n\t\t\ttx_value: ['', Validators.required],\r\n\t\t\ttx_fee: ['.0002', Validators.required]\r\n\t\t});\r\n\t}\r\n\r\n\tonSubmit() {\r\n\t\tthis.submitted = true;\r\n\t\tif (this.form.invalid) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (this.api_data.confirmed_balance < this.form.controls.tx_value.value + this.form.controls.tx_fee.value) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// when called from job\r\n\t\tif (this.fromJob) {\r\n\t\t\tthis.auth.transactionFromJob(this.source_job, this.destination_comment._id, this.form.controls.tx_value.value, this.form.controls.tx_fee.value)\r\n\t\t\t.subscribe( res => {\r\n\t\t\t\tconsole.log(res);\r\n\t\t\t\tthis.txid = JSON.parse(res).txid;\r\n\t\t\t\tthis.confirmed = true;\r\n\t\t\t}, (err) => {\r\n\t\t\t\tconsole.error(err);\r\n\t\t\t});\r\n\t\t// when called from comment\r\n\t\t} else {\r\n\t\t\tthis.auth.transactionFromUser(this.user._id, this.form.controls.tx_destination.value, this.form.controls.tx_value.value, this.form.controls.tx_fee.value)\r\n\t\t\t.subscribe( res => {\r\n\t\t\t\tconsole.log(res);\r\n\t\t\t\tthis.txid = JSON.parse(res).txid;\r\n\t\t\t\tthis.confirmed = true;\r\n\t\t\t}, (err) => {\r\n\t\t\t\tconsole.error(err);\r\n\t\t\t});\t\r\n\t\t}\r\n\t}  \r\n}","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  api_url: \"http://localhost:8080\"\r\n};\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}